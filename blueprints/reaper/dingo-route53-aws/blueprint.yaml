formatVersion: 1
name: dingo-route53-aws
version: 2.2
inputs:
  os:
    default: ubuntu1604
    description: Please select operating system
    enum:
      - ubuntu1604
      - ubuntu1804
      - centos7
    type: string
    title: Please select operating system
  platform:
    default: aws
    type: string
    enum:
      - aws
    title: Please select platform
    description: Please select platform
  size:
    type: string
    default: small
    enum:
      - small
      - medium
      - large
    title: Please select instance size
    description: Please select instance size
  name:
    type: string
    default: apjdemo
    title: Please select app name
    description: Please select app name
  environment:
    type: string
    description: Environment
    default: test
    enum:
      - dev
      - test
resources:
  Route53_Record_1:
    type: Cloud.Service.AWS.Route53.Record
    dependsOn:
      - LB
    properties:
      name: '${input.name}'
      type: CNAME
      region: ap-southeast-1
      account: apj-sddc-aws
      zone_id: Z1DXP5AZ44Z4IY
      ttl: 300
      records:
        - '${resource.LB.address}'
  LB:
    type: Cloud.LoadBalancer
    properties:
      name: lb
      routes:
        - instancePort: 80
          instanceProtocol: http
          port: 80
          protocol: http
      network: '${resource["web-net"].id}'
      instances:
        - '${resource["web-svr"].id}'
      internetFacing: true
  web-svr:
    type: Cloud.Machine
    properties:
      image: '${input.os}'
      flavor: '${input.size}'
      tags:
        - value: owner
          key: '${env.requestedBy}'
      constraints:
        - tag: 'platform: ${input.platform}'
        - tag: 'env:${input.environment}'
      cloudConfig: |
        packages:
          - apache2
        runcmd:
          - ufw allow 'Apache Full'
          - git clone https://github.com/kenshi08/dingo
          - cp -r /dingo/src/* /var/www/html/
        users:
          - name: apjdemo
            ssh-authorized-keys:
             - ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA831LifYON4t7lWDRH/vPcTMRG9w/4rMBMLBRs6MIRnq2ch4KJoDKwyWTcYrDLmKUEPsaVzGnznL5zWxzBLL8oaKE5gMPrzWQUVMn7KtMMKyduLuHy50N4x+AY4cEhhch7mLBFOMeeGA4jTJTzbbqZox9zST0BrhNaf+cdqc+jpM11KTOjAP8961xhfTh6aRcBZadnKqBzA+RJ8hzzsAQSuSShaB+t/i2zkfMTzsm0mXlSmP9eFDADcra5e0uFgedCfxITqgcZIu8deHUc5cqIOS+NB+4qbGcgLeEtpBtHJ1Y402+mwVU4iDJwmC+KHXd8jlydLKVaivVhOZmprh/Cw==
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
      networks:
        - network: '${resource["web-net"].id}'
          assignment: dynamic
  web-net:
    type: Cloud.Network
    properties:
      name: web-net
      networkType: existing
      constraints:
        - tag: 'env:${input.environment}'
        - tag: 'function: public'
