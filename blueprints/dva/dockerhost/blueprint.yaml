formatVersion: 1
name: dockerhost
version: 1.3
inputs:
  application:
    type: string
    default: shared-service
    readOnly: true
  environment:
    type: string
    description: Environment
    default: test
    enum:
      - dev
      - test
      - prod
  platform:
    type: string
    description: Select target cloud platform
    enum:
      - 'aws'
      - 'azure'
      - 'gcp'
      - 'vsphere'
  azureresourcegrp:
    type: string
    description: Azure Resource Group (optional)
    default: ''
    enum:
      - ''
      - apj-sddc-demo
  user:
    type: string
    title: Username
    description: Username for the OS account
    default: dockeradmin
  sshkey:
    type: string
    description: SSH key
    default: ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA831LifYON4t7lWDRH/vPcTMRG9w/4rMBMLBRs6MIRnq2ch4KJoDKwyWTcYrDLmKUEPsaVzGnznL5zWxzBLL8oaKE5gMPrzWQUVMn7KtMMKyduLuHy50N4x+AY4cEhhch7mLBFOMeeGA4jTJTzbbqZox9zST0BrhNaf+cdqc+jpM11KTOjAP8961xhfTh6aRcBZadnKqBzA+RJ8hzzsAQSuSShaB+t/i2zkfMTzsm0mXlSmP9eFDADcra5e0uFgedCfxITqgcZIu8deHUc5cqIOS+NB+4qbGcgLeEtpBtHJ1Y402+mwVU4iDJwmC+KHXd8jlydLKVaivVhOZmprh/Cw==
    encrypted: true
resources:
  mgmt_net:
    type: Cloud.Network
    properties:
      name: dockerhost-net
      networkType: existing
      constraints:
        - tag: 'function:mgmt'
  docker:
    type: Cloud.Machine
    properties:
      name: dockerhost
      image: ubuntu1804
      flavor: medium
      remoteAccess:
        username: ${input.user}
        authentication: publicPrivateKey
        sshKey: '${input.sshkey}'
      resourceGroupName: '${input.azureresourcegrp}'
      constraints:
        - tag: 'platform:${input.platform}'
        - tag: 'env:${input.environment}'
      cloudConfig: |
        #cloud-config
        # log all cloud-init process output (info & errors) to a logfile
        output: {all: ">> /var/log/cloud-init-output.log"}
        repo_update: true
        repo_upgrade: all
        packages:
        - git
        users:
          - name: '${input.user}'
            ssh-authorized-keys:
            - ${input.sshkey}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
        runcmd:
          - sed -i -e '$aAllowUsers apjdemo' /etc/ssh/sshd_config
          - service ssh reload
          - curl -fsSL https://get.docker.com -o get-docker.sh; sh get-docker.sh
          - systemctl daemon-reload
          - systemctl restart docker
        write_files:
          - path: /etc/systemd/system/docker.service.d/override.conf
            permissions: '0644'
            content: |
             [Service]
             ExecStart=
             ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375
      networks:
        - network: '${resource.mgmt_net.id}'
          assignment: '${input.platform == "vsphere" ? "static" : "dynamic"}'
